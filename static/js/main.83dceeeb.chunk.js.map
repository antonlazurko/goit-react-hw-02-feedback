{"version":3,"sources":["Feedback/Statistic/Statistic.module.css","Feedback/Feedback.module.css","Feedback/Section/Section.module.css","Feedback/FeedbackOptions/FeedbackOptions.module.css","Feedback/Section/Section.jsx","Feedback/FeedbackOptions/FeedbackOptions.jsx","Feedback/Statistic/Statistic.jsx","Feedback/Notification/Notification.jsx","Feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","className","styles","Controls","options","onLeaveFeedback","map","type","buttons","onClick","console","log","Statistic","props","Object","keys","stats","toUpperCase","value","Notification","message","Feedback","state","good","neutral","bad","total","positiveFeedbackPercentage","countPositiveFeedbackPercentage","setState","prevState","Math","round","countTotalFeedback","this","positivePercentage","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,0B,iBCA3FD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,8B,oBCApED,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,mC,qLCSbC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOJ,QAA3B,UACGC,GAAS,6BAAKA,IACdC,M,iBCoBUG,EAtBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OAAOD,EAAQE,KAAI,SAAAC,GACjB,MAAa,+BAATA,GAAkD,UAATA,EAEzC,8BACE,wBACEN,UAAWC,IAAOM,QAClBD,KAAK,SACLE,QAAS,WACPJ,EAAgBE,IAJpB,SAOGA,KARKA,GAaLG,QAAQC,U,gBCINC,EArBG,SAAAC,GAEhB,OADcC,OAAOC,KAAKF,GACbP,KAAI,SAAAC,GACf,OACE,qBAAgBN,UAAWC,IAAOc,MAAlC,SACE,uBAAMf,UAAWC,IAAOK,KAAxB,UACY,uBAATA,EACG,sBACAA,EAAKU,cAHX,IAKE,uBAAMhB,UAAWC,IAAOgB,MAAxB,UACGL,EAAMN,GAEG,uBAATA,GAAiC,WAT9BA,OCJDY,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCsEEC,E,4MAhEbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,2BAA4B,G,EAG9BC,gCAAkC,WAChC,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLH,2BAA4BI,KAAKC,MAC9BF,EAAUP,KAAOO,EAAUJ,MAAS,U,EAK7CO,mBAAqB,WACnB,EAAKJ,UAAS,SAAAC,GACZ,MAAO,CACLJ,MAAOI,EAAUJ,MAAQ,O,EAK/BrB,gBAAkB,SAAAE,GAChB,EAAKsB,UAAS,SAAAC,GACZ,OAAO,eAAGvB,EAAOuB,EAAUvB,GAAQ,MAErC,EAAK0B,qBACL,EAAKL,mC,uDAIL,OACE,gCACE,cAAC,EAAD,CAAS7B,MAAO,wBAAyBE,UAAU,UAAnD,SACE,qBAAKA,UAAWC,IAAOC,SAAvB,SACE,cAAC,EAAD,CACEC,QAASU,OAAOC,KAAKmB,KAAKZ,OAC1BjB,gBAAiB6B,KAAK7B,sBAI5B,qBAAKJ,UAAWC,IAAOU,UAAvB,SACE,eAAC,EAAD,CAASb,MAAO,YAAaE,UAAU,UAAvC,WACIiC,KAAKZ,MAAMI,OACX,cAAC,EAAD,CAAcN,QAAQ,sBAEvBc,KAAKZ,MAAMI,OACV,cAAC,EAAD,CACEH,KAAMW,KAAKZ,MAAMC,KACjBC,QAASU,KAAKZ,MAAME,QACpBC,IAAKS,KAAKZ,MAAMG,IAChBC,MAAOQ,KAAKZ,MAAMI,MAClBS,mBAAoBD,KAAKZ,MAAMK,yC,GAxDxBS,aCFRC,MAHf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83dceeeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistic_stats__1Lgef\",\"value\":\"Statistic_value__1OAE0\",\"type\":\"Statistic_type__105xZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Feedback_Controls__22dGG\",\"Statistic\":\"Feedback_Statistic___Y9cQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1KJmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__34WxW\"};","import React from 'react';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst Controls = ({ options, onLeaveFeedback }) => {\r\n  return options.map(type => {\r\n    if (type !== 'positiveFeedbackPercentage' && type !== 'total') {\r\n      return (\r\n        <div key={type}>\r\n          <button\r\n            className={styles.buttons}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onLeaveFeedback(type);\r\n            }}\r\n          >\r\n            {type}\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return console.log();\r\n    }\r\n  });\r\n};\r\n\r\nexport default Controls;\r\nControls.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import styles from './Statistic.module.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistic = props => {\r\n  const types = Object.keys(props);\r\n  return types.map(type => {\r\n    return (\r\n      <div key={type} className={styles.stats}>\r\n        <span className={styles.type}>\r\n          {type === 'positivePercentage'\r\n            ? 'POSITIVE PERCENTAGE'\r\n            : type.toUpperCase()}\r\n          :\r\n          <span className={styles.value}>\r\n            {props[type]}\r\n\r\n            {type === 'positivePercentage' && '%'}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Statistic;\r\nStatistic.propTypes = {\r\n  props: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import styles from './index';\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nexport default Notification;\r\n","import styles from './Feedback.module.css';\r\nimport React, { Component } from 'react';\r\nimport Section from './Section';\r\nimport Controls from './FeedbackOptions';\r\nimport Statistic from './Statistic';\r\nimport Notification from './Notification';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positiveFeedbackPercentage: 0,\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        positiveFeedbackPercentage: Math.round(\r\n          (prevState.good / prevState.total) * 100,\r\n        ),\r\n      };\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        total: prevState.total + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  onLeaveFeedback = type => {\r\n    this.setState(prevState => {\r\n      return { [type]: prevState[type] + 1 };\r\n    });\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title={'Please leave feedback'} className=\"Section\">\r\n          <div className={styles.Controls}>\r\n            <Controls\r\n              options={Object.keys(this.state)}\r\n              onLeaveFeedback={this.onLeaveFeedback}\r\n            />\r\n          </div>\r\n        </Section>\r\n        <div className={styles.Statistic}>\r\n          <Section title={'Statistic'} className=\"Section\">\r\n            {!this.state.total && (\r\n              <Notification message=\"No feedback given\"></Notification>\r\n            )}\r\n            {this.state.total && (\r\n              <Statistic\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.state.total}\r\n                positivePercentage={this.state.positiveFeedbackPercentage}\r\n              />\r\n            )}\r\n          </Section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport Feedback from './Feedback';\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}