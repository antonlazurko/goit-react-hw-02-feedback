{"version":3,"sources":["Feedback/Feedback.module.css","Feedback/Section/Section.jsx","Feedback/Controls/Controls.jsx","Feedback/Statistic/Statistic.jsx","Feedback/Notification/Notification.jsx","Feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","Controls","feedback","feedbackName","type","onClick","Statistic","value","statName","className","Notification","message","Feedback","state","good","neutral","bad","total","positiveFeedbackPercentage","countPositiveFeedbackPercentage","setState","prevState","Math","round","countTotalFeedback","goodFeedback","neutralFeedback","badFeedback","this","Component","defaultProps","initialValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JACAA,EAAOC,QAAU,CAAC,SAAW,6B,yKCSdC,G,YAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACGD,GAAS,6BAAKA,IACdC,OCkBUC,G,MAnBE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC5B,OACE,8BACE,wBAAQC,KAAK,SAASC,QAASH,EAA/B,SACGC,QCKMG,G,MAVG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,8BACE,uBAAMC,UAAU,iBAAhB,UACGD,EADH,IACcD,EACE,sBAAbC,GAAoC,WCL9BE,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCMPC,E,4MAGJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,2BAA4B,G,EAG9BC,gCAAkC,WAChC,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLH,2BAA4BI,KAAKC,MAC9BF,EAAUP,KAAOO,EAAUJ,MAAS,U,EAK7CO,mBAAqB,WACnB,EAAKJ,UAAS,SAAAC,GACZ,MAAO,CACLJ,MAAOI,EAAUJ,MAAQ,O,EAI/BQ,aAAe,WACb,EAAKL,UAAS,SAAAC,GACZ,MAAO,CACLP,KAAMO,EAAUP,KAAO,MAG3B,EAAKU,qBACL,EAAKL,mC,EAEPO,gBAAkB,WAChB,EAAKN,UAAS,SAAAC,GACZ,MAAO,CACLN,QAASM,EAAUN,QAAU,MAGjC,EAAKS,qBACL,EAAKL,mC,EAEPQ,YAAc,WACZ,EAAKP,UAAS,SAAAC,GACZ,MAAO,CACLL,IAAKK,EAAUL,IAAM,MAGzB,EAAKQ,qBACL,EAAKL,mC,uDAIL,OACE,gCACE,eAAC,EAAD,CAASpB,MAAO,wBAAhB,UAUE,cAAC,EAAD,CAAUG,SAAU0B,KAAKH,aAActB,aAAc,SACrD,cAAC,EAAD,CAAUD,SAAU0B,KAAKF,gBAAiBvB,aAAc,YACxD,cAAC,EAAD,CAAUD,SAAU0B,KAAKD,YAAaxB,aAAc,WAEtD,eAAC,EAAD,CAASJ,MAAO,YAAhB,WACI6B,KAAKf,MAAMI,OACX,cAAC,EAAD,CAAcN,QAAQ,sBAEvBiB,KAAKf,MAAMI,OACV,gCACE,cAAC,EAAD,CAAWV,MAAOqB,KAAKf,MAAMC,KAAMN,SAAU,SAC7C,cAAC,EAAD,CAAWD,MAAOqB,KAAKf,MAAME,QAASP,SAAU,YAChD,cAAC,EAAD,CAAWD,MAAOqB,KAAKf,MAAMG,IAAKR,SAAU,QAC5C,cAAC,EAAD,CAAWD,MAAOqB,KAAKf,MAAMI,MAAOT,SAAU,UAAY,IAC1D,cAAC,EAAD,CACED,MAAOqB,KAAKf,MAAMK,2BAClBV,SAAU,mC,GApFHqB,aAAjBjB,EACGkB,aAAe,CAAEC,aAAc,GAyHzBnB,QC7HAoB,MAHf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.921d348f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Feedback_Feedback__1cwdh\"};","import React from 'react';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Controls.module.css';\r\n\r\n// const Controls = ({ onGoodFeedback, onNeutralFeedback, onBadFeedback }) => {\r\nconst Controls = ({ feedback, feedbackName }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={feedback}>\r\n        {feedbackName}\r\n      </button>\r\n      {/* <p>Please leave feedback</p>\r\n      <button type=\"button\" onClick={onGoodFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onNeutralFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onBadFeedback}>\r\n        Bad\r\n      </button> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Controls;\r\nControls.propTypes = {\r\n  feedback: PropTypes.func,\r\n  feedbackName: PropTypes.string,\r\n};\r\n","import styles from './Statistic.module.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistic = ({ value, statName }) => {\r\n  return (\r\n    <div>\r\n      <span className=\"Counter__value\">\r\n        {statName}:{value}\r\n        {statName === 'Positive Feedback' && '%'}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Statistic;\r\nStatistic.propTypes = {\r\n  value: PropTypes.number,\r\n  statName: PropTypes.string,\r\n};\r\n","import styles from './index';\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nexport default Notification;\r\n","import styles from './Feedback.module.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Section from './Section';\r\nimport Controls from './Controls';\r\nimport Statistic from './Statistic';\r\nimport Notification from './Notification';\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = { initialValue: 0 };\r\n  static propTypes = { initialValue: PropTypes.number.isRequired };\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positiveFeedbackPercentage: 0,\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        positiveFeedbackPercentage: Math.round(\r\n          (prevState.good / prevState.total) * 100,\r\n        ),\r\n      };\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        total: prevState.total + 1,\r\n      };\r\n    });\r\n  };\r\n  goodFeedback = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        good: prevState.good + 1,\r\n      };\r\n    });\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n  neutralFeedback = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        neutral: prevState.neutral + 1,\r\n      };\r\n    });\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n  badFeedback = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        bad: prevState.bad + 1,\r\n      };\r\n    });\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title={'Please leave feedback'}>\r\n          {/* <Controls\r\n            feedbacks={[\r\n              { good: this.goodFeedback },\r\n              { neutral: this.neutralFeedback },\r\n              { bad: this.badFeedback },\r\n            ]}\r\n            feedbackName={['good', 'neutral', 'bad']}\r\n          /> */}\r\n\r\n          <Controls feedback={this.goodFeedback} feedbackName={'good'} />\r\n          <Controls feedback={this.neutralFeedback} feedbackName={'neutral'} />\r\n          <Controls feedback={this.badFeedback} feedbackName={'bad'} />\r\n        </Section>\r\n        <Section title={'Statistic'}>\r\n          {!this.state.total && (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          )}\r\n          {this.state.total && (\r\n            <div>\r\n              <Statistic value={this.state.good} statName={'Good'} />\r\n              <Statistic value={this.state.neutral} statName={'Neutral'} />\r\n              <Statistic value={this.state.bad} statName={'Bad'} />\r\n              <Statistic value={this.state.total} statName={'Total'} />{' '}\r\n              <Statistic\r\n                value={this.state.positiveFeedbackPercentage}\r\n                statName={'Positive Feedback'}\r\n              />\r\n            </div>\r\n          )}\r\n        </Section>\r\n      </div>\r\n      // <div>\r\n      //  <Section title={'Please leave feedback'} />\r\n      //   <Section title={'Statistic'} ></Section>\r\n      // </div>\r\n      // <div className=\"Feedback\">\r\n      // <Controls feedback={this.goodFeedback} feedbackName={'good'} />\r\n      // <Controls feedback={this.neutralFeedback} feedbackName={'neutral'} />\r\n      // <Controls feedback={this.badFeedback} feedbackName={'bad'} />\r\n      //   {/* <Controls\r\n      //     onGoodFeedback={this.goodFeedback}\r\n      //     onNeutralFeedback={this.neutralFeedback}\r\n      //     onBadFeedback={this.badFeedback}\r\n      //   /> */}\r\n      // {!this.state.total && (\r\n      //   <Notification message=\"No feedback given\"></Notification>\r\n      // )}\r\n      //   {this.state.total && (\r\n      //     <div>\r\n      // <Statistic value={this.state.good} statName={'Good'} />\r\n      // <Statistic value={this.state.neutral} statName={'Neutral'} />\r\n      // <Statistic value={this.state.bad} statName={'Bad'} />\r\n      // <Statistic value={this.state.total} statName={'Total'} />{' '}\r\n      // <Statistic\r\n      //   value={this.state.positiveFeedbackPercentage}\r\n      //   statName={'Positive Feedback'}\r\n      // />\r\n      //     </div>\r\n      //   )}\r\n      // </div>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport Feedback from './Feedback';\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}